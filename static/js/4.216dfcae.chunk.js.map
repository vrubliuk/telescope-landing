{"version":3,"sources":["features/widgets/widgets.ts","../../src/index.ts","features/dashboards/widgetLibrary/WidgetLibraryPage.module.scss","features/dashboards/widgetLibrary/WidgetLibraryTile.module.scss","features/dashboards/widgetLibrary/WidgetLibraryWidgetsPreview.module.scss","features/dashboards/widgetLibrary/WidgetLibraryCreateDashboard.module.scss","features/dashboards/widgetLibrary/WidgetLibraryTile.tsx","features/dashboards/widgetLibrary/WidgetLibraryWidgetsPreview.tsx","features/dashboards/widgetLibrary/WidgetLibraryCreateDashboard.tsx","features/widgets/widgetTemplates.ts","features/dashboards/widgetLibrary/WidgetLibraryPage.tsx"],"names":["widgets","ids","entities","competitiveness","id","name","description","icon","image","relatedWidgetIds","attitude","awareness","funnel","useImmer","initialValue","useState","updateValue","useCallback","produce","updater","module","exports","WidgetLibraryTile","className","passedTitle","title","widgetIds","onQuestionClicked","isChecked","onCheckboxClicked","isAvailable","props","renderIcon","widgetId","key","widgetIcon","Icon","icons","useMemo","some","cx","styles","length","buttonGroup","buttonGroupShowInfo","onClick","undefined","buttonGroupCheck","checked","size","unavailable","info","style","opacity","map","i","WidgetLibraryWidgetsPreview","header","ifNotAvaliable","images","imageTitle","relatedWidgets","InputWithError","withError","Input","WidgetLibraryCreateDashboard","useContext","context","setIsGlobalPreloaderShown","setModalElement","history","useHistory","allDashboards","useSelector","selectAllDashboards","console","log","setName","dispatch","useDispatch","useTemporaryErrors","errors","setErrors","selectedWidgetIdsList","filter","selectedWidgetIds","slides","reduce","acc","push","sliderProps","dots","infinite","arrows","speed","slidesToShow","slidesToScroll","nextArrow","NextArrow","prevArrow","PrevArrow","responsive","breakpoint","settings","a","trimmedName","trim","addOneDashboard","isPrivate","searchId","folderId","configs","result","createdDashboard","unwrapResult","notify","show","dir","widgetLibraryCreateDashboard","note","slider","slide","slideText","slideImageWrapper","slideImage","leftText","inputWrapper","input","value","changeHandler","placeholder","error","button","slickArrow","widgetTemplates","SelectWithError","Select","WidgetLibraryPage","searchOptions","searches","label","setSearchId","setIsPrivate","dashboardsStatus","dashboards","status","useEffect","fetchAllDashboards","setFilter","companySubscriptionPlan","selectCompanySubscriptionPlan","tiles","availableWidgetIds","availableWidgets","getAvailabilityStatus","every","includes","template","sort","b","isHidden","toLowerCase","hoveredTileIndex","setHoveredTileIndex","hoveredTile","updateSelectedWidgetIds","isCreateDashboardSectionShown","setIsCreateDashboardSectionShown","showPreviewModal","modal","getIsEachWidgetOfTileChecked","checkEachWidgetOfTile","forEach","draft","uncheckEachWidgetOfTile","Object","keys","modifier","widgetLibraryPage","selectsWrapper","selectWrapper","options","Boolean","subtitles","window","innerWidth","—Åontent","main","templatesWrapper","slice","isEveryWidgetChecked","onMouseEnter","onMouseLeave","filterInput","filterIcon","widgetsWrapper","visibility","aside","asideSection","closeButton"],"mappings":"4HA2MeA,IAxLU,CACvBC,IAAK,CACH,wBACA,kBACA,kBACA,wBACA,WACA,oBACA,mBACA,qBACA,0BACA,YACA,YACA,mBACA,uBACA,0BACA,YACA,gBACA,mBACA,UAEFC,SAAU,CACRC,gBAAiB,CACfC,GAAI,kBACJC,KAAM,kBACNC,YACE,4QACFC,KAAM,kBACNC,MAAO,kBACPC,iBAAkB,CAAC,kBAAmB,0BAExC,kBAAmB,CACjBL,GAAI,kBACJC,KAAM,kBACNC,YACE,gMACFC,KAAM,gBACNC,MAAO,iBACPC,iBAAkB,CAAC,kBAAmB,0BAExC,wBAAyB,CACvBL,GAAI,wBACJC,KAAM,wBACNC,YACE,8ZACFC,KAAM,qBACNC,MAAO,6BACPC,iBAAkB,CAAC,kBAAmB,0BAGxCC,SAAU,CACRN,GAAI,WACJC,KAAM,WACNC,YACE,uLACFC,KAAM,WACNC,MAAO,uBACPC,iBAAkB,CAAC,oBAAqB,qBAE1C,oBAAqB,CACnBL,GAAI,oBACJC,KAAM,wBACNC,YACE,+OACFC,KAAM,mBACNC,MAAO,2BACPC,iBAAkB,CAAC,WAAY,qBAEjC,mBAAoB,CAClBL,GAAI,mBACJC,KAAM,mBACNC,YACE,oNACFC,KAAM,kBACNC,MAAO,4BACPC,iBAAkB,CAAC,WAAY,sBAGjC,qBAAsB,CACpBL,GAAI,qBACJC,KAAM,mBACNC,YACE,gKACFC,KAAM,kBACNC,MAAO,wBACPC,iBAAkB,CAAC,0BAA2B,cAEhD,0BAA2B,CACzBL,GAAI,0BACJC,KAAM,8BACNC,YACE,+HACFC,KAAM,4BACNC,MAAO,8BACPC,iBAAkB,CAAC,qBAAsB,cAE3C,YAAa,CACXL,GAAI,YACJC,KAAM,uBACNC,YACE,gVACFC,KAAM,qBACNC,MAAO,cACPC,iBAAkB,CAAC,qBAAsB,4BAG3CE,UAAW,CACTP,GAAI,YACJC,KAAM,YACNC,YACE,qHACFC,KAAM,YACNC,MAAO,qBACPC,iBAAkB,IAGpB,mBAAoB,CAClBL,GAAI,mBACJC,KAAM,mBACNC,YACE,6fACFC,KAAM,kBACNC,MAAO,2BACPC,iBAAkB,CAAC,uBAAwB,4BAE7C,uBAAwB,CACtBL,GAAI,uBACJC,KAAM,uBACNC,YACE,+JACFC,KAAM,aACNC,MAAO,+BACPC,iBAAkB,CAAC,mBAAoB,4BAEzC,0BAA2B,CACzBL,GAAI,0BACJC,KAAM,0BACNC,YACE,iNACFC,KAAM,kBACNC,MAAO,4BACPC,iBAAkB,CAAC,uBAAwB,yBAG7C,YAAa,CACXL,GAAI,YACJC,KAAM,YACNC,YACE,wYACFC,KAAM,kBACNC,MAAO,oBACPC,iBAAkB,CAAC,gBAAiB,qBAEtC,gBAAiB,CACfL,GAAI,gBACJC,KAAM,gBACNC,YACE,8JACFC,KAAM,aACNC,MAAO,wBACPC,iBAAkB,CAAC,YAAa,qBAElC,mBAAoB,CAClBL,GAAI,mBACJC,KAAM,mBACNC,YACE,uMACFC,KAAM,kBACNC,MAAO,wBACPC,iBAAkB,CAAC,gBAAiB,kBAGtCG,OAAQ,CACNR,GAAI,SACJC,KAAM,SACNC,YACE,uMACFC,KAAM,iBACNC,MAAO,mBACPC,iBAAkB,O,+FCtLRI,EAASC,SACIC,mBAASD,GAAxBE,OACZ,MAAO,CAAC,EAAD,GAELC,uBAAY,YACVD,EAAYE,YAAQC,MACnB,O,oBCrBPC,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,MAAQ,iCAAiC,eAAiB,0CAA0C,cAAgB,yCAAyC,UAAY,qCAAqC,OAAS,kCAAkC,eAAU,wCAAmC,KAAO,gCAAgC,KAAO,gCAAgC,OAAS,kCAAkC,WAAa,sCAAsC,YAAc,uCAAuC,iBAAmB,4CAA4C,eAAiB,0CAA0C,MAAQ,iCAAiC,aAAe,wCAAwC,MAAQ,iCAAiC,YAAc,yC,oBCA32BD,EAAOC,QAAU,CAAC,SAAW,oCAAoC,KAAO,gCAAgC,MAAQ,iCAAiC,OAAS,kCAAkC,YAAc,uCAAuC,oBAAsB,+CAA+C,iBAAmB,4CAA4C,QAAU,mCAAmC,YAAc,uCAAuC,sBAAwB,mD,oBCA/eD,EAAOC,QAAU,CAAC,OAAS,4CAA4C,eAAiB,oDAAoD,OAAS,4CAA4C,WAAa,gDAAgD,MAAQ,2CAA2C,YAAc,iDAAiD,eAAiB,sD,oBCAjYD,EAAOC,QAAU,CAAC,6BAA+B,mEAAmE,MAAQ,4CAA4C,KAAO,2CAA2C,OAAS,6CAA6C,WAAa,iDAAiD,UAAY,gDAAgD,UAAY,gDAAgD,MAAQ,4CAA4C,UAAY,gDAAgD,kBAAoB,wDAAwD,WAAa,iDAAiD,aAAe,mDAAmD,MAAQ,4CAA4C,OAAS,+C,+LCelzBC,EAA+B,SAAC,GAS/B,IAAD,IARXC,EAQW,EARXA,UACOC,EAOI,EAPXC,MACAC,EAMW,EANXA,UACAC,EAKW,EALXA,kBACAC,EAIW,EAJXA,UACAC,EAGW,EAHXA,kBACAC,EAEW,EAFXA,YACGC,EACQ,mHACLN,EAAK,OACTD,QADS,IACTA,IACCE,EAAU,IAAV,oBAAe1B,IAAQE,SAASwB,EAAU,WAA1C,aAAe,EAAgCrB,YAA/C,QAA4D,GAEzD2B,EAAa,SAACC,EAAkBC,GAAkB,IAAD,EAC/CC,EAAU,UAAGnC,IAAQE,SAAS+B,UAApB,aAAG,EAA4B1B,KAC/C,GAAI4B,EAAY,CACd,IAAMC,EAAOC,EAAMF,GACnB,OAAO,cAACC,EAAD,GAAWF,KAQtB,OAJ0BI,mBAAQ,WAChC,OAAOZ,EAAUa,MAAK,SAACnC,GAAD,QAAUJ,IAAQE,SAASE,QAChD,CAACsB,IAGF,6CACEH,UAAWiB,IACTC,IAAOf,EAAUgB,OAAS,EAAI,WAAa,UAC3CnB,IAEEQ,GALN,aAOE,iCACGD,EACC,sBAAKP,UAAWkB,IAAOE,YAAvB,UACE,wBACEpB,UAAWkB,IAAOG,oBAClBC,QAASf,EAAc,kBAAMH,UAAsBmB,EAFrD,eAMA,wBACEvB,UAAS,UAAKkB,IAAOM,iBAAZ,YACPnB,EAAYa,IAAOO,QAAU,IAE/BH,QAASf,EAAc,kBAAMD,UAAsBiB,EAJrD,SAME,cAAC,IAAD,CAAOG,KAAM,UAIjB,sBAAK1B,UAAWkB,IAAOS,YAAvB,UACE,cAACb,EAAA,KAAD,CAAYY,KAAM,KAClB,wDAGJ,qBACE1B,UAAWkB,IAAOU,KAClBC,MAAOtB,EAAc,CAAEuB,QAAS,KAAQ,CAAEA,QAAS,QAFrD,SAIG3B,EAAUgB,OAAS,EAClB,qCACE,4BAAIjB,IACJ,qBAAKF,UAAWkB,IAAOJ,MAAvB,SACGX,EAAU4B,KAAI,SAAClD,EAAImD,GAAL,OAAWvB,EAAW5B,EAAImD,WAI7C,qCACG7B,EAAU,IAAMM,EAAWN,EAAU,IACtC,4BAAID,eAMZ,M,0BCjFO+B,EAAyC,SAAC,GAKzC,IAJZ/B,EAIW,EAJXA,MACAnB,EAGW,EAHXA,YACAoB,EAEW,EAFXA,UACAI,EACW,EADXA,YAEME,EAAa,SAACC,EAAkBC,GAAkB,IAAD,EAC/CC,EAAU,UAAGnC,IAAQE,SAAS+B,UAApB,aAAG,EAA4B1B,KAC/C,GAAI4B,EAAY,CACd,IAAMC,EAAOC,EAAMF,GACnB,OAAO,cAACC,EAAD,GAAWF,KAIhBzB,EAAmB6B,mBAAQ,WACc,IAAD,IAA5C,OAAyB,IAArBZ,EAAUgB,QAAgBhB,EAAU,IACtC,oBAAO1B,IAAQE,SAASwB,EAAU,WAAlC,aAAO,EAAgCjB,wBAAvC,QAGK,KACN,CAACiB,IAEJ,OACE,qCACE,sBAAKH,UAAWkB,IAAOgB,OAAvB,UACE,8BAAM/B,EAAU4B,KAAI,SAAClD,EAAImD,GAAL,OAAWvB,EAAW5B,EAAImD,QAC9C,+BAAO9B,KACLK,GACA,sBAAKP,UAAWkB,IAAOiB,eAAvB,UACE,cAACrB,EAAA,KAAD,CAAYY,KAAM,KAClB,2DAIN,qBAAK1B,UAAWkB,IAAOkB,OAAvB,SACGjC,EAAU4B,KAAI,SAAClD,EAAImD,GAAO,IAAD,IAClBlD,EAAI,UAAGL,IAAQE,SAASE,UAApB,aAAG,EAAsBC,KAC7BG,EAAK,UAAGR,IAAQE,SAASE,UAApB,aAAG,EAAsBI,MAEpC,OAAOH,GAAQG,EACb,gCACGkB,EAAUgB,OAAS,GAClB,qBAAKnB,UAAWkB,IAAOmB,WAAvB,SAAoCvD,IAEtC,cAAC,IAAD,CAAakB,UAAWkB,IAAOjC,MAAOH,KAAMG,GAAY+C,KAJhDA,GAMR,UAGR,qBAAKhC,UAAWkB,IAAOnC,YAAvB,SAAqCA,MAClCG,EAAiBiC,QAClB,sBAAKnB,UAAWkB,IAAOoB,eAAvB,UACE,4DACA,8BACGpD,EAAiB6C,KAAI,SAAClD,EAAImD,GAAL,aACpB,gCACGvB,EAAW5B,EAAImD,GAChB,sCAAIvD,IAAQE,SAASE,UAArB,aAAI,EAAsBC,SAFlBkD,e,mGCnDlBO,EAAiBC,YAAUC,KAQpBC,EAA0C,SAAClC,GAAW,IAAD,EACTmC,qBAAWC,KAA1DC,EADwD,EACxDA,0BAA2BC,EAD6B,EAC7BA,gBAC7BC,EAAUC,cAEVC,EAAgBC,YAAYC,KAClCC,QAAQC,IAAIJ,GALoD,MAuBxCzD,mBAAS,IAvB+B,mBAuBzDV,EAvByD,KAuBnDwE,EAvBmD,KAyB1DC,EAAwBC,cAzBkC,EA2BlCC,cAAtBC,EA3BwD,EA2BxDA,OAAQC,EA3BgD,EA2BhDA,UAEVC,EAAwB7C,mBAAQ,WACpC,OAAOtC,IAAQC,IAAImF,QAAO,SAAChF,GAAD,OAAQ2B,EAAMsD,kBAAkBjF,QACzD,CAAC2B,EAAMsD,oBAEJC,EAAShD,mBAAQ,WAGrB,OAAO6C,EAAsBI,QAAgB,SAACC,EAAKpF,GAAQ,IAAD,IAClDC,EAAI,UAAGL,IAAQE,SAASE,UAApB,aAAG,EAAsBC,KAC7BG,EAAK,UAAGR,IAAQE,SAASE,UAApB,aAAG,EAAsBI,MASpC,OAPIH,GAAQG,GACVgF,EAAIC,KAAK,CACPpF,OACAG,UAIGgF,IACN,MACF,CAACL,IAEEO,EAAcpD,mBAAQ,WAC1B,MAAO,CACLqD,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,MAAO,IACPC,aAAcT,EAAO5C,QAAU,EAAI,EAAI4C,EAAO5C,QAAU,EAAI,EAAI,EAChEsD,eAAgB,EAChBC,UAAW,cAACC,EAAD,IACXC,UAAW,cAACC,EAAD,IACXC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRR,aAAcT,EAAO5C,QAAU,EAAI,EAAI,IAG3C,CACE4D,WAAY,KACZC,SAAU,CACRR,aAAc,IAGlB,CACEO,WAAY,IACZC,SAAU,CACRR,aAAc,IAGlB,CACEO,WAAY,IACZC,SAAU,CACRR,aAAc,QAKrB,CAACT,IAxF4D,4CA0FhE,gCAAAkB,EAAA,yDACQC,EAAcpG,EAAKqG,OAD3B,uBAIIxB,EAAU,CACR7E,KAAM,aALZ,iCAUE+D,GAA0B,GAV5B,kBAYyBU,EACnB6B,YAAgB,CACdtG,KAAMoG,EACNG,UAAW7E,EAAM6E,UACjBC,SAAU9E,EAAM8E,SAChBC,SAAU,KACVpF,UAAWyD,EACX4B,QAAS,MAnBjB,OAYUC,EAZV,OAsBUC,EAAmBC,YAAaF,GACtC3C,EAAgB,MAChB8C,SAAOC,KAAK,qBAAsB,WAClC9C,EAAQmB,KAAK,oBAAsBwB,EAAiB7G,IAzBxD,kDA2BIuE,QAAQ0C,IAAR,MACAF,SAAOC,KAAK,6BAA8B,SA5B9C,QA8BEhD,GAA0B,GA9B5B,2DA1FgE,sBA2HhE,OACE,sBAAK7C,UAAWkB,IAAO6E,6BAAvB,UACE,qBAAK/F,UAAWkB,IAAOhB,MAAvB,kCACG6D,EAAO5C,QACR,gCACE,qBAAKnB,UAAWkB,IAAO8E,KAAvB,gGAIA,cAAC,IAAD,yBAAQhG,UAAWkB,IAAO+E,QAAY9B,GAAtC,aACGJ,EAAOhC,KAAI,WAAkBC,GAAlB,IAAGlD,EAAH,EAAGA,KAAMG,EAAT,EAASA,MAAT,OACV,sBAAKe,UAAWkB,IAAOgF,MAAvB,UACE,qBAAKlG,UAAWkB,IAAOiF,UAAvB,SAAmCnE,EAAI,IACvC,qBAAKhC,UAAWkB,IAAOkF,kBAAvB,SACE,cAAC,IAAD,CAAapG,UAAWkB,IAAOmF,WAAYvH,KAAMG,MAEnD,qBAAKe,UAAWkB,IAAOiF,UAAvB,SAAmCrH,MALFkD,cAWxCiB,EAAc9B,QACf,8BACE,qBAAKnB,UAAWkB,IAAO8E,KAAvB,sFAWJ,gCACE,cAAC,IAAD,CAAOM,SAAS,wBAChB,sBAAKtG,UAAWkB,IAAOqF,aAAvB,UACE,cAAChE,EAAD,CACEvC,UAAWkB,IAAOsF,MAClBC,MAAO3H,EACP4H,cAAe,SAACD,GAAD,OAAWnD,EAAQmD,IAClCE,YAAY,aACZC,MAAOlD,EAAO5E,OAEhB,wBAAQkB,UAAWkB,IAAO2F,OAAQvF,QAxKsB,2CAwKxD,4BASV,SAASqD,EAAUnE,GAAa,IACtBqB,EAAmBrB,EAAnBqB,MAAOP,EAAYd,EAAZc,QACf,OACE,qBACEtB,UAAS,UAAKkB,IAAO4F,WAAZ,YAA0B5F,IAAOwD,WAC1C7C,MAAK,eAAOA,GACZP,QAASA,EAHX,SAKE,cAAC,UAAD,CAASI,KAAM,OAKrB,SAASmD,EAAUrE,GAAa,IACtBqB,EAAmBrB,EAAnBqB,MAAOP,EAAYd,EAAZc,QACf,OACE,qBACEtB,UAAS,UAAKkB,IAAO4F,WAAZ,YAA0B5F,IAAO0D,WAC1C/C,MAAK,eAAOA,GACZP,QAASA,EAHX,SAKE,cAAC,UAAD,CAASI,KAAM,O,aC1MNqF,EArBS,CACtB,CACE7G,MAAO,gBACPnB,YACE,qRACFoB,UAAW,CAAC,kBAAmB,kBAAmB,0BAEpD,CACED,MAAO,WACPnB,YACE,+SACFoB,UAAW,CAAC,WAAY,oBAAqB,qBAE/C,CACED,MAAO,cACPnB,YACE,wMACFoB,UAAW,CAAC,qBAAsB,0BAA2B,e,SCA3D6G,EAAkBxE,YAAUyE,KA2SnBC,UAjSe,WAAO,IAC3BpE,EAAoBH,qBAAWC,KAA/BE,gBACFS,EAAWC,cAFiB,EAGJC,cAAtBC,EAH0B,EAG1BA,OAAQC,EAHkB,EAGlBA,UAGVwD,EAAgBjE,aAAY,qBAAGkE,SAC1BrF,KAAI,kBAAmB,CAAE0E,MAArB,EAAG5H,GAA6BwI,MAAhC,EAAOvI,YAPY,EAUFU,mBAAS,IAVP,mBAU3B8F,EAV2B,KAUjBgC,EAViB,OAaA9H,oBAAS,GAbT,mBAa3B6F,EAb2B,KAahBkC,EAbgB,KAe5BC,EAAmBtE,aACvB,qBAAGuE,WAAuCC,UAG5CC,qBAAU,WACiB,SAArBH,GACFjE,EAASqE,iBAEV,CAACJ,EAAkBjE,IAvBY,MA0BN/D,mBAAS,IA1BH,mBA0B3BqE,EA1B2B,KA0BnBgE,EA1BmB,KA4B5BC,EAA0B5E,YAAY6E,KAEtCC,EAAgBjH,mBAAQ,WAAO,IAAD,EAC5BkH,EAAkB,iBAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAyBI,wBAA5B,QAAgD,GAExE,SAASC,EAAsBzJ,GAC7B,OAAOA,EAAI0J,OAAM,SAACvJ,GAAD,OAAQoJ,EAAmBI,SAASxJ,MAGvD,MAAM,GAAN,mBACKkI,EACAhF,KAAI,SAACuG,GAAD,mBAAC,eACDA,GADA,IAEH/H,YAAa4H,EAAsBG,EAASnI,gBAE7CoI,MAAK,SAACtD,EAAGuD,GAAJ,OAAWA,EAAEjI,aAAe0E,EAAE1E,gBANxC,YAOK9B,IAAQC,IACRqD,KAAI,SAAClD,GAAD,oBAAS,CACZqB,MAAK,oBAAEzB,IAAQE,SAASE,UAAnB,aAAE,EAAsBC,YAAxB,QAAgC,GACrCC,YAAW,oBAAEN,IAAQE,SAASE,UAAnB,aAAE,EAAsBE,mBAAxB,QAAuC,GAClDoB,UAAW,CAACtB,GACZ0B,YAAa4H,EAAsB,CAACtJ,IACpC4J,WAAU,UAAChK,IAAQE,SAASE,UAAlB,aAAC,EAAsBC,KAC9B4J,cACAL,SAASxE,EAAO6E,oBAEpBH,MAAK,SAACtD,EAAGuD,GAAJ,OAAWA,EAAEjI,aAAe0E,EAAE1E,eACnCgI,MAAK,SAACtD,EAAGuD,GAAJ,OAAWvD,EAAEwD,UAAYD,EAAEC,gBAEpC,CAACX,EAAyBjE,IAzDK,EA2DcrE,oBAAU,GA3DxB,mBA2D3BmJ,EA3D2B,KA2DTC,EA3DS,KA6D5BC,EAAcb,EAAMW,GA7DQ,EA+DmBrJ,YAElD,IAjE+B,mBA+D3BwE,EA/D2B,KA+DRgF,EA/DQ,OA0E9BtJ,oBAAS,GA1EqB,mBAwEhCuJ,EAxEgC,KAyEhCC,EAzEgC,KAqFlC,SAASC,KACHJ,GACF/F,EACE,qBAAK9C,UAAWkB,IAAOgI,MAAvB,SACE,cAAC,EAAD,CACEhJ,MAAO2I,EAAY3I,MACnBnB,YAAa8J,EAAY9J,YACzBoB,UAAW0I,EAAY1I,UACvBI,YAAasI,EAAYtI,iBAOnC,SAAS4I,GAA6BhJ,GACpC,OAAOA,EAAUiI,OAAM,SAACvJ,GAAD,OAAQiF,EAAkBjF,MAGnD,SAASuK,GAAsBjJ,GAC7BA,EAAUkJ,SAAQ,SAACxK,GAAD,OAChBiK,GAAwB,SAACQ,GAAgBA,EAAMzK,IAAM,QAIzD,SAAS0K,GAAwBpJ,GAC/BA,EAAUkJ,SAAQ,SAACxK,GAAD,OAChBiK,GAAwB,SAACQ,UAAsBA,EAAMzK,SA4BzD,OAhEA8I,qBAAU,WAENoB,IACCS,OAAOC,KAAK3F,GAAmB3C,QAEhC6H,GAAiC,KAElC,CAACD,EAA+BjF,IAyDV,YAArB0D,EACK,cAAC,IAAD,CAAWkC,SAAS,UAI3B,sBAAK1J,UAAWkB,IAAOyI,kBAAvB,UACE,qBAAK3J,UAAWkB,IAAOhB,MAAvB,4BACA,sBAAKF,UAAWkB,IAAO0I,eAAvB,UACE,sBAAK5J,UAAWkB,IAAO2I,cAAvB,UACE,cAAC,IAAD,CAAOvD,SAAS,+BAChB,cAACU,EAAD,CACE8C,QAAS,CACP,CAAErD,MAAO,GAAIY,MAAO,UACpB,CAAEZ,MAAO,IAAKY,MAAO,YAEvBZ,MAAOpB,EAAY,IAAM,GACzBqB,cAAe,SAACD,GAAD,OAAWc,EAAawC,QAAQtD,UAGnD,sBAAKzG,UAAWkB,IAAO2I,cAAvB,UACE,cAAC,IAAD,CAAOvD,SAAS,uBAChB,cAACU,EAAD,CACE8C,QAAS3C,EACTV,MAAOnB,EACPoB,cAAe,SAACD,GAAD,OAAWa,EAAYb,IACtCG,MAAOlD,EAAO4B,iBAIpB,sBAAKtF,UAAWkB,IAAO8I,UAAvB,UACE,gGACGR,OAAOC,KAAK3F,GAAmB3C,QAChC,gGAEE,wBAAQnB,UAAWkB,IAAO2F,OAAQvF,QAAS,WAzD9CgE,EAOD2E,OAAOC,YAAc,IACvBlB,GAAiC,IAEjCA,GAAiC,GACjClG,EACE,qBAAK9C,UAAWkB,IAAOgI,MAAvB,SACE,cAAC,EAAD,CACE7D,UAAWA,EACXC,SAAUA,EACVxB,kBAAmBA,QAfzBH,EAAU,CACR2B,SAAU,cAuDN,wBAMN,sBAAKtF,UAAWkB,IAAOiJ,aAAvB,UACE,sBAAKnK,UAAWkB,IAAOkJ,KAAvB,UACE,gCACE,qBAAKpK,UAAWkB,IAAO8E,KAAvB,yGAIA,qBAAKhG,UAAWkB,IAAOmJ,iBAAvB,SACGrC,EAAMsC,MAAM,EAAG,GAAGvI,KAAI,WAAoCC,GAAO,IAAxC9B,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,UAAWI,EAAqB,EAArBA,YACpCgK,EAAuBpB,GAC3BhJ,GAEF,OACE,cAAC,EAAD,CACED,MAAOA,EACPC,UAAWA,EACXC,kBAAmB,kBAAM6I,MACzB5I,UAAWkK,EACXjK,kBAAmB,kBACjBiK,EACIhB,GAAwBpJ,GACxBiJ,GAAsBjJ,IAE5BI,YAAaA,EACbiK,aAAc,kBAAM5B,EAAoB5G,IACxCyI,aAAc,kBAAM7B,GAAqB,KACpC5G,WAMf,gCACE,qBAAKhC,UAAWkB,IAAO8E,KAAvB,6CACA,sBAAKhG,UAAWkB,IAAO2C,OAAvB,UACE,cAAC,IAAD,CACE7D,UAAWkB,IAAOwJ,YAClBjE,MAAO5C,EACP6C,cAAe,SAACD,GAAD,OAAWoB,EAAUpB,IACpCE,YAAY,yBAEd,cAAC,YAAD,CACE3G,UAAWkB,IAAOyJ,WAClBjJ,KAAM,GACNI,QAAS+B,EAAS,EAAI,SAG1B,qBAAK7D,UAAWkB,IAAO0J,eAAvB,SACG5C,EACEsC,MAAM,GACNvI,KAAI,WAA8CC,GAAO,IAAlD9B,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,UAAWI,EAA+B,EAA/BA,YAAakI,EAAkB,EAAlBA,SAC/B8B,EAAuBpB,GAC3BhJ,GAGF,OACE,cAAC,EAAD,CACE0B,MAAK,eAAQ4G,GAAY,CAAEoC,WAAY,WACvC3K,MAAOA,EACPC,UAAWA,EACXC,kBAAmB,kBAAM6I,MACzB5I,UAAWkK,EACXjK,kBAAmB,kBACjBiK,EACIhB,GAAwBpJ,GACxBiJ,GAAsBjJ,IAE5BI,YAAaA,EACbiK,aAAc,kBAAM5B,EAAoB5G,EAAI,IAC5CyI,aAAc,kBAAM7B,GAAqB,KACpC5G,cAOnB,sBAAKhC,UAAWkB,IAAO4J,MAAvB,YACKjC,IAAgBE,GACjB,qBAAK/I,UAAWkB,IAAO6J,aAAvB,SACE,cAAC,EAAD,CACE7K,MAAO2I,EAAY3I,MACnBnB,YAAa8J,EAAY9J,YACzBoB,UAAW0I,EAAY1I,UACvBI,YAAasI,EAAYtI,gBAI9BwI,GACC,sBAAK/I,UAAWkB,IAAO6J,aAAvB,UACE,wBACE/K,UAAWkB,IAAO8J,YAClB1J,QAAS,kBAAM0H,GAAiC,IAFlD,SAIE,cAAC,QAAD,CAAOtH,KAAM,OAEf,cAAC,EAAD,CACE2D,UAAWA,EACXC,SAAUA,EACVxB,kBAAmBA","file":"static/js/4.216dfcae.chunk.js","sourcesContent":["import * as icons from \"../../assets/icons\";\nimport images from \"../../components/Image/images\";\n\ntype Widget = {\n  id: string;\n  name: string;\n  description: string;\n  icon: keyof typeof icons;\n  image: keyof typeof images;\n  relatedWidgetIds: string[];\n};\n\ntype Widgets = {\n  readonly ids: Widget[\"id\"][];\n  entities: {\n    [id: string]: Widget;\n  };\n};\n\nconst widgets: Widgets = {\n  ids: [\n    \"data robustness score\", // won't be shown\n    \"competitiveness\",\n    \"share of search\",\n    \"share of earned media\",\n    \"attitude\",\n    \"sentiment drivers\",\n    \"business drivers\",\n    \"general attributes\",\n    \"position vs competition\",\n    \"key areas\",\n    \"awareness\",\n    \"reputation index\",\n    \"reputation sentiment\",\n    \"reputation distribution\",\n    \"esg index\",\n    \"esg sentiment\",\n    \"esg distribution\",\n    \"funnel\",\n  ],\n  entities: {\n    competitiveness: {\n      id: \"competitiveness\",\n      name: \"Competitiveness\",\n      description:\n        \"Your Competitiveness score shows you if you are creating demand from the market. This curve shows your search volume weighted with sentiment of the search. Baseline 0 shows your industry average and in order to gain market share you are recommended to stay above 0.\",\n      icon: \"Competitiveness\",\n      image: \"lineChartWidget\",\n      relatedWidgetIds: [\"share of search\", \"share of earned media\"],\n    },\n    \"share of search\": {\n      id: \"share of search\",\n      name: \"Share of search\",\n      description:\n        \"Your Share of Search shows how much interest you are generating in comparison to your competitors. Marketing academia together with Google have correlated share of search with market share.\",\n      icon: \"ShareOfSearch\",\n      image: \"timeLineWidget\",\n      relatedWidgetIds: [\"competitiveness\", \"share of earned media\"],\n    },\n    \"share of earned media\": {\n      id: \"share of earned media\",\n      name: \"Share of earned media\",\n      description:\n        \"Your share of Earned Media shows you how much talk you are generating in comparison to your competitors. This indicates the creativity of your marketing communications and the ability to create an emotional response from the market. Creating emotion is key to long term brand building, however if the sentiment is negative it could indicate a crisis (look at your sentiment in the ‚ÄúEmotions‚Äù section).\",\n      icon: \"ShareOfEarnedMedia\",\n      image: \"shareOfEarnedMediaPieChart\",\n      relatedWidgetIds: [\"share of search\", \"share of earned media\"],\n    },\n\n    attitude: {\n      id: \"attitude\",\n      name: \"Attitude\",\n      description:\n        \"In what tone is the market talking about your brand? Is your marketing having an impact on the market's sentiment towards you? Look at how your score differs from your competitors.\",\n      icon: \"Attitude\",\n      image: \"competitorsPieWidget\",\n      relatedWidgetIds: [\"sentiment drivers\", \"business drivers\"],\n    },\n    \"sentiment drivers\": {\n      id: \"sentiment drivers\",\n      name: \"Top sentiment drivers\",\n      description:\n        \"The top sentiment drivers show what topics are most frequently being discussed when talking about you in a negative or positive way. Look into what these topics are to get insights into customer pain points and what they are happy with.\",\n      icon: \"SentimentDrivers\",\n      image: \"sentimentDriversPositive\",\n      relatedWidgetIds: [\"attitude\", \"business drivers\"],\n    },\n    \"business drivers\": {\n      id: \"business drivers\",\n      name: \"Business drivers\",\n      description:\n        \"The business drivers are built on the 7 P‚Äôs of marketing which breaks down a brand into its key components. Here we show you a holistic view of why customers are choosing your brand over your competitors.\",\n      icon: \"BusinessDrivers\",\n      image: \"reputationDestributionBar\",\n      relatedWidgetIds: [\"attitude\", \"sentiment drivers\"],\n    },\n\n    \"general attributes\": {\n      id: \"general attributes\",\n      name: \"Associated words\",\n      description:\n        \"Associated words show the words most associated with you and your competitors, and how strong you are compared to competitors in regards to those attributes.\",\n      icon: \"AssociatedWords\",\n      image: \"associatedWordsWidget\",\n      relatedWidgetIds: [\"position vs competition\", \"key areas\"],\n    },\n    \"position vs competition\": {\n      id: \"position vs competition\",\n      name: \"Business driver positioning\",\n      description:\n        \"Position vs Competition shows what your strongest area is compared to your competitors based on the 7 P‚Äôs of marketing.\",\n      icon: \"BusinessDriverPositioning\",\n      image: \"positionVScompetitionWidget\",\n      relatedWidgetIds: [\"general attributes\", \"key areas\"],\n    },\n    \"key areas\": {\n      id: \"key areas\",\n      name: \"Key business drivers\",\n      description:\n        \"Key Areas shows a recommendation on what business drivers are most active in driving your market share today and what has the biggest impact to impact it positively in the future. This is a predictive analysis based on a regression analysis of what P‚Äôs have affected your brand most historically in order to forecast the future.\",\n      icon: \"KeyBusinessDrivers\",\n      image: \"newKeyAreas\",\n      relatedWidgetIds: [\"general attributes\", \"position vs competition\"],\n    },\n\n    awareness: {\n      id: \"awareness\",\n      name: \"Awareness\",\n      description:\n        \"This overview shows the awareness of your brand taking into consideration the biggest competitors in your segment.\",\n      icon: \"Awareness\",\n      image: \"awarenessPieCharts\",\n      relatedWidgetIds: [],\n    },\n\n    \"reputation index\": {\n      id: \"reputation index\",\n      name: \"Reputation index\",\n      description:\n        \"Using Harvard Business School‚Äôs parameters defining reputation this indicator identifies whether a company and therefore it‚Äôs management, is considered to have a good or bad reputation. This is a compound indicator index where the weight of the parameters is automatically set by monitoring the regional and social importance of multiple topics. The values range between +100 and -100 where a positive score means an overall good reputation and negative means a downward trend in your reputation.\",\n      icon: \"Competitiveness\",\n      image: \"reputationIndexLinechart\",\n      relatedWidgetIds: [\"reputation sentiment\", \"reputation distribution\"],\n    },\n    \"reputation sentiment\": {\n      id: \"reputation sentiment\",\n      name: \"Reputation sentiment\",\n      description:\n        \"The Reputation sentiment metric is an analysis of whether people have a positive, neutral or negative attitude towards your company divided in 6 parameters.\",\n      icon: \"Reputation\",\n      image: \"reputationSentimentLinechart\",\n      relatedWidgetIds: [\"reputation index\", \"reputation distribution\"],\n    },\n    \"reputation distribution\": {\n      id: \"reputation distribution\",\n      name: \"Reputation distribution\",\n      description:\n        \"This framework looks at six parameters that drive the reputation for your company. The Graph shows what parameters that are the most talked-about online for your company‚Äô in regards to your reputation.\",\n      icon: \"BusinessDrivers\",\n      image: \"reputationDestributionBar\",\n      relatedWidgetIds: [\"reputation sentiment\", \"reputation sentiment\"],\n    },\n\n    \"esg index\": {\n      id: \"esg index\",\n      name: \"Esg index\",\n      description:\n        \"The ESG this indicator identifies whether a company is considered to have a good or bad ESG. This is a compound indicator index where the weight of the parameters is automatically set by monitoring the regional and social importance of multiple topics. The values range between +100 and -100 where a positive score means an overall good ESG and negative means a downward trend in your ESG.\",\n      icon: \"Competitiveness\",\n      image: \"esgIndexLinechart\",\n      relatedWidgetIds: [\"esg sentiment\", \"esg distribution\"],\n    },\n    \"esg sentiment\": {\n      id: \"esg sentiment\",\n      name: \"Esg sentiment\",\n      description:\n        \"The ESG sentiment metric is an analysis of whether people have a positive, neutral or negative attitude towards your company divided in the ESG parameters.\",\n      icon: \"Reputation\",\n      image: \"esgSentimentLinechart\",\n      relatedWidgetIds: [\"esg index\", \"esg distribution\"],\n    },\n    \"esg distribution\": {\n      id: \"esg distribution\",\n      name: \"Esg distribution\",\n      description:\n        \"This framework looks at the esg parameters that drive the ESG for your company. The Graph shows what parameters that are the most talked-about online for your company‚Äô in regards to your ESG.\",\n      icon: \"BusinessDrivers\",\n      image: \"esgDestributionWidget\",\n      relatedWidgetIds: [\"esg sentiment\", \"esg sentiment\"],\n    },\n\n    funnel: {\n      id: \"funnel\",\n      name: \"Funnel\",\n      description:\n        \"A marketing funnel describes your customer's journey with you. From the initial stages when someone learns about your business, to the purchasing stage, marketing funnels map routes to conversion.\",\n      icon: \"FunnelOverview\",\n      image: \"funnelHorizontal\",\n      relatedWidgetIds: [],\n    },\n  },\n};\n\nexport default widgets;\n","import produce, { Draft } from \"immer\";\nimport { useState, useReducer, useCallback, useMemo, Dispatch } from \"react\";\n\nexport type Reducer<S = any, A = any> = (\n  draftState: Draft<S>,\n  action: A\n) => void | S;\n\nexport type Updater<S> = (f: (draft: Draft<S>) => void | S) => void;\n\nexport type ImmerHook<S> = [S, Updater<S>];\n\nexport function useImmer<S = any>(\n  initialValue: S | (() => S)\n): [S, (f: (draft: Draft<S>) => void | S) => void];\n\nexport function useImmer(initialValue: any) {\n  const [val, updateValue] = useState(initialValue);\n  return [\n    val,\n    useCallback(updater => {\n      updateValue(produce(updater));\n    }, [])\n  ];\n}\n\nexport function useImmerReducer<S = any, A = any>(\n  reducer: Reducer<S, A>,\n  initialState: S,\n  initialAction?: (initial: any) => S\n): [S, Dispatch<A>];\nexport function useImmerReducer(reducer, initialState, initialAction) {\n  const cachedReducer = useMemo(() => produce(reducer), [reducer]);\n  return useReducer(cachedReducer, initialState as any, initialAction);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widgetLibraryPage\":\"WidgetLibraryPage_widgetLibraryPage__2lZRh\",\"title\":\"WidgetLibraryPage_title__3QrHh\",\"selectsWrapper\":\"WidgetLibraryPage_selectsWrapper__3EmKm\",\"selectWrapper\":\"WidgetLibraryPage_selectWrapper__L8g_D\",\"subtitles\":\"WidgetLibraryPage_subtitles__18suQ\",\"button\":\"WidgetLibraryPage_button__3toYp\",\"—Åontent\":\"WidgetLibraryPage_—Åontent__3GDsX\",\"main\":\"WidgetLibraryPage_main__3_HUs\",\"note\":\"WidgetLibraryPage_note__3mQXK\",\"filter\":\"WidgetLibraryPage_filter__1X7bD\",\"filterIcon\":\"WidgetLibraryPage_filterIcon__Vs-RS\",\"filterInput\":\"WidgetLibraryPage_filterInput__1EnFs\",\"templatesWrapper\":\"WidgetLibraryPage_templatesWrapper__SGZzC\",\"widgetsWrapper\":\"WidgetLibraryPage_widgetsWrapper__1Ix04\",\"aside\":\"WidgetLibraryPage_aside__2iMeg\",\"asideSection\":\"WidgetLibraryPage_asideSection__1oPtC\",\"modal\":\"WidgetLibraryPage_modal__2S0D5\",\"closeButton\":\"WidgetLibraryPage_closeButton__1mXcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template\":\"WidgetLibraryTile_template__1JWL4\",\"info\":\"WidgetLibraryTile_info__9Jn9z\",\"icons\":\"WidgetLibraryTile_icons__131-8\",\"widget\":\"WidgetLibraryTile_widget__22DgA\",\"buttonGroup\":\"WidgetLibraryTile_buttonGroup__2_IYu\",\"buttonGroupShowInfo\":\"WidgetLibraryTile_buttonGroupShowInfo__cfExz\",\"buttonGroupCheck\":\"WidgetLibraryTile_buttonGroupCheck__22xCa\",\"checked\":\"WidgetLibraryTile_checked__AKQJ6\",\"unavailable\":\"WidgetLibraryTile_unavailable__1glvM\",\"contentPreviewInModal\":\"WidgetLibraryTile_contentPreviewInModal__s79nY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"WidgetLibraryWidgetsPreview_header__2ICE0\",\"ifNotAvaliable\":\"WidgetLibraryWidgetsPreview_ifNotAvaliable__2vn7a\",\"images\":\"WidgetLibraryWidgetsPreview_images__3mQfy\",\"imageTitle\":\"WidgetLibraryWidgetsPreview_imageTitle__1T14G\",\"image\":\"WidgetLibraryWidgetsPreview_image__2MO2T\",\"description\":\"WidgetLibraryWidgetsPreview_description__MIhBC\",\"relatedWidgets\":\"WidgetLibraryWidgetsPreview_relatedWidgets__-TcOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widgetLibraryCreateDashboard\":\"WidgetLibraryCreateDashboard_widgetLibraryCreateDashboard__1-0i6\",\"title\":\"WidgetLibraryCreateDashboard_title__3Ft56\",\"note\":\"WidgetLibraryCreateDashboard_note__2jBcc\",\"slider\":\"WidgetLibraryCreateDashboard_slider__2ExjA\",\"slickArrow\":\"WidgetLibraryCreateDashboard_slickArrow__2VcYf\",\"prevArrow\":\"WidgetLibraryCreateDashboard_prevArrow__35_yq\",\"nextArrow\":\"WidgetLibraryCreateDashboard_nextArrow__3K6BH\",\"slide\":\"WidgetLibraryCreateDashboard_slide__1azc2\",\"slideText\":\"WidgetLibraryCreateDashboard_slideText__bbbp6\",\"slideImageWrapper\":\"WidgetLibraryCreateDashboard_slideImageWrapper__39Uy4\",\"slideImage\":\"WidgetLibraryCreateDashboard_slideImage__1aih6\",\"inputWrapper\":\"WidgetLibraryCreateDashboard_inputWrapper__205RA\",\"input\":\"WidgetLibraryCreateDashboard_input__oP5ph\",\"button\":\"WidgetLibraryCreateDashboard_button__1238l\"};","import { FC, HTMLAttributes, useMemo } from \"react\";\nimport styles from \"./WidgetLibraryTile.module.scss\";\nimport * as icons from \"../../../assets/icons\";\nimport { AiOutlineCheck as Check } from \"react-icons/ai\";\nimport cx from \"classnames\";\nimport widgets from \"../../../features/widgets/widgets\";\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  title: string;\n  widgetIds: string[];\n  onQuestionClicked: () => void;\n  isChecked: boolean;\n  onCheckboxClicked: () => void;\n  isAvailable: boolean;\n}\n\nexport const WidgetLibraryTile: FC<Props> = ({\n  className,\n  title: passedTitle,\n  widgetIds,\n  onQuestionClicked,\n  isChecked,\n  onCheckboxClicked,\n  isAvailable,\n  ...props\n}: Props) => {\n  const title =\n    passedTitle ??\n    (widgetIds[0] ? widgets.entities[widgetIds[0]]?.name ?? \"\" : \"\");\n\n  const renderIcon = (widgetId: string, key?: number) => {\n    const widgetIcon = widgets.entities[widgetId]?.icon;\n    if (widgetIcon) {\n      const Icon = icons[widgetIcon];\n      return <Icon key={key} />;\n    }\n  };\n\n  const isAnyWidgetExists = useMemo(() => {\n    return widgetIds.some((id) => !!widgets.entities[id]);\n  }, [widgetIds]);\n\n  return isAnyWidgetExists ? (\n    <div\n      className={cx(\n        styles[widgetIds.length > 1 ? \"template\" : \"widget\"],\n        className\n      )}\n      {...props}\n    >\n      <span>\n        {isAvailable ? (\n          <div className={styles.buttonGroup}>\n            <button\n              className={styles.buttonGroupShowInfo}\n              onClick={isAvailable ? () => onQuestionClicked() : undefined}\n            >\n              ?\n            </button>\n            <button\n              className={`${styles.buttonGroupCheck} ${\n                isChecked ? styles.checked : \"\"\n              }`}\n              onClick={isAvailable ? () => onCheckboxClicked() : undefined}\n            >\n              <Check size={11} />\n            </button>\n          </div>\n        ) : (\n          <div className={styles.unavailable}>\n            <icons.Lock size={12} />\n            <p>Available at upgrade</p>\n          </div>\n        )}\n        <div\n          className={styles.info}\n          style={isAvailable ? { opacity: \"1\" } : { opacity: \"0.25\" }}\n        >\n          {widgetIds.length > 1 ? (\n            <>\n              <p>{title}</p>\n              <div className={styles.icons}>\n                {widgetIds.map((id, i) => renderIcon(id, i))}\n              </div>\n            </>\n          ) : (\n            <>\n              {widgetIds[0] && renderIcon(widgetIds[0])}\n              <p>{title}</p>\n            </>\n          )}\n        </div>\n      </span>\n    </div>\n  ) : null;\n};\n","import { FC, useMemo } from \"react\";\nimport styles from \"./WidgetLibraryWidgetsPreview.module.scss\";\nimport { FadeInImage } from \"../../../components\";\nimport * as icons from \"../../../assets/icons\";\nimport widgets from \"../../../features/widgets/widgets\";\n\ntype Props = {\n  title: string;\n  description: string;\n  widgetIds: string[];\n  isAvailable: boolean;\n};\n\nexport const WidgetLibraryWidgetsPreview: FC<Props> = ({\n  title,\n  description,\n  widgetIds,\n  isAvailable,\n}: Props) => {\n  const renderIcon = (widgetId: string, key?: number) => {\n    const widgetIcon = widgets.entities[widgetId]?.icon;\n    if (widgetIcon) {\n      const Icon = icons[widgetIcon];\n      return <Icon key={key} />;\n    }\n  };\n\n  const relatedWidgetIds = useMemo(() => {\n    if (widgetIds.length === 1 && widgetIds[0]) {\n      return widgets.entities[widgetIds[0]]?.relatedWidgetIds ?? [];\n    }\n\n    return [];\n  }, [widgetIds]);\n\n  return (\n    <>\n      <div className={styles.header}>\n        <div>{widgetIds.map((id, i) => renderIcon(id, i))}</div>\n        <span>{title}</span>\n        {!isAvailable && (\n          <div className={styles.ifNotAvaliable}>\n            <icons.Lock size={12} />\n            <p>Available at upgrade</p>\n          </div>\n        )}\n      </div>\n      <div className={styles.images}>\n        {widgetIds.map((id, i) => {\n          const name = widgets.entities[id]?.name;\n          const image = widgets.entities[id]?.image;\n\n          return name && image ? (\n            <div key={i}>\n              {widgetIds.length > 1 && (\n                <div className={styles.imageTitle}>{name}</div>\n              )}\n              <FadeInImage className={styles.image} name={image} key={i} />\n            </div>\n          ) : null;\n        })}\n      </div>\n      <div className={styles.description}>{description}</div>\n      {!!relatedWidgetIds.length && (\n        <div className={styles.relatedWidgets}>\n          <div>Works well together with:</div>\n          <div>\n            {relatedWidgetIds.map((id, i) => (\n              <div key={i}>\n                {renderIcon(id, i)}\n                <p>{widgets.entities[id]?.name}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { FC, useContext, useState, useMemo } from \"react\";\nimport styles from \"./WidgetLibraryCreateDashboard.module.scss\";\nimport { FadeInImage, Label, Input } from \"../../../components\";\nimport { Chevron } from \"../../../assets/icons\";\nimport Slider from \"react-slick\";\nimport widgets from \"../../../features/widgets/widgets\";\nimport { withError } from \"../../../hocs\";\nimport { useTemporaryErrors } from \"../../../hooks\";\n// import { useImmer } from \"use-immer\";\nimport { useHistory } from \"react-router-dom\";\nimport context from \"../../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAllDashboards } from \"../dashboardsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { addOneDashboard } from \"../dashboardsSlice\";\nimport { notify } from \"react-notify-toast\";\n\nconst InputWithError = withError(Input);\n\ntype Props = {\n  isPrivate: boolean;\n  searchId: string;\n  selectedWidgetIds: { [widgetId: string]: true };\n};\n\nexport const WidgetLibraryCreateDashboard: FC<Props> = (props) => {\n  const { setIsGlobalPreloaderShown, setModalElement } = useContext(context);\n  const history = useHistory();\n\n  const allDashboards = useSelector(selectAllDashboards);\n  console.log(allDashboards);\n\n  // const [selectedDashboardIds, updateSelectedDashboardIds] = useImmer<{\n  //   [dashboardId: string]: true;\n  // }>({});\n\n  // function checkEachDashboardOfFolder(widgetIds: string[]) {\n  //   widgetIds.forEach((id) =>\n  //   updateSelectedDashboardIds((draft) => void (draft[id] = true))\n  //   );\n  // }\n\n  // function uncheckEachDashboardOfFolder(widgetIds: string[]) {\n  //   widgetIds.forEach((id) =>\n  //   updateSelectedDashboardIds((draft) => void delete draft[id])\n  //   );\n  // }\n\n  const [name, setName] = useState(\"\");\n\n  const dispatch: AppDispatch = useDispatch();\n\n  const { errors, setErrors } = useTemporaryErrors();\n\n  const selectedWidgetIdsList = useMemo(() => {\n    return widgets.ids.filter((id) => props.selectedWidgetIds[id]);\n  }, [props.selectedWidgetIds]);\n\n  const slides = useMemo(() => {\n    type Slide = Pick<ValueOf<typeof widgets.entities>, \"name\" | \"image\">;\n\n    return selectedWidgetIdsList.reduce<Slide[]>((acc, id) => {\n      const name = widgets.entities[id]?.name;\n      const image = widgets.entities[id]?.image;\n\n      if (name && image) {\n        acc.push({\n          name,\n          image,\n        });\n      }\n\n      return acc;\n    }, []);\n  }, [selectedWidgetIdsList]);\n\n  const sliderProps = useMemo(() => {\n    return {\n      dots: false,\n      infinite: true,\n      arrows: true,\n      speed: 500,\n      slidesToShow: slides.length >= 3 ? 3 : slides.length >= 2 ? 2 : 1,\n      slidesToScroll: 1,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      responsive: [\n        {\n          breakpoint: 1399,\n          settings: {\n            slidesToShow: slides.length >= 2 ? 2 : 1,\n          },\n        },\n        {\n          breakpoint: 1199,\n          settings: {\n            slidesToShow: 1,\n          },\n        },\n        {\n          breakpoint: 991,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: 767,\n          settings: {\n            slidesToShow: 1,\n          },\n        },\n      ],\n    };\n  }, [slides]);\n\n  async function onDoneClicked() {\n    const trimmedName = name.trim();\n\n    if (!trimmedName) {\n      setErrors({\n        name: \"Required\",\n      });\n      return;\n    }\n\n    setIsGlobalPreloaderShown(true);\n    try {\n      const result = await dispatch(\n        addOneDashboard({\n          name: trimmedName,\n          isPrivate: props.isPrivate,\n          searchId: props.searchId,\n          folderId: null,\n          widgetIds: selectedWidgetIdsList,\n          configs: {},\n        })\n      );\n      const createdDashboard = unwrapResult(result);\n      setModalElement(null);\n      notify.show(\"Successfully saved\", \"success\");\n      history.push(\"/home/dashboards/\" + createdDashboard.id);\n    } catch (error) {\n      console.dir(error);\n      notify.show(\"Oops, something went wrong\", \"error\");\n    }\n    setIsGlobalPreloaderShown(false);\n  }\n\n  return (\n    <div className={styles.widgetLibraryCreateDashboard}>\n      <div className={styles.title}>Create a dashboard</div>\n      {!!slides.length && (\n        <div>\n          <div className={styles.note}>\n            You have chosen the widgets below for your dashboard. You can always\n            add on later.\n          </div>\n          <Slider className={styles.slider} {...sliderProps}>\n            {slides.map(({ name, image }, i) => (\n              <div className={styles.slide} key={i}>\n                <div className={styles.slideText}>{i + 1}</div>\n                <div className={styles.slideImageWrapper}>\n                  <FadeInImage className={styles.slideImage} name={image} />\n                </div>\n                <div className={styles.slideText}>{name}</div>\n              </div>\n            ))}\n          </Slider>\n        </div>\n      )}\n      {!!allDashboards.length && (\n        <div>\n          <div className={styles.note}>\n            If you like, you can add these widgets to already existing\n            dashboards.\n          </div>\n          {/* <div className={styles.wrapper}>\n          {ExistingDashbordsData.map((dashbord, index) => (\n            <ExistingDashbords key={index} data={dashbord} />\n          ))}\n        </div> */}\n        </div>\n      )}\n      <div>\n        <Label leftText=\"Name your dashboard\" />\n        <div className={styles.inputWrapper}>\n          <InputWithError\n            className={styles.input}\n            value={name}\n            changeHandler={(value) => setName(value)}\n            placeholder=\"My Brand X\"\n            error={errors.name}\n          />\n          <button className={styles.button} onClick={onDoneClicked}>\n            Done\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction NextArrow(props: any) {\n  const { style, onClick } = props;\n  return (\n    <div\n      className={`${styles.slickArrow} ${styles.nextArrow}`}\n      style={{ ...style }}\n      onClick={onClick}\n    >\n      <Chevron size={10} />\n    </div>\n  );\n}\n\nfunction PrevArrow(props: any) {\n  const { style, onClick } = props;\n  return (\n    <div\n      className={`${styles.slickArrow} ${styles.prevArrow}`}\n      style={{ ...style }}\n      onClick={onClick}\n    >\n      <Chevron size={10} />\n    </div>\n  );\n}\n","const widgetTemplates = [\n  {\n    title: \"Effectiveness\",\n    description:\n      \"Effectiveness is the sum of all marketing initiatives that come together to make or break a brand. We have chosen these three measures as the most important in measuring effectiveness, showing if you are competitive, creating interest from the market and being talked about.\",\n    widgetIds: [\"competitiveness\", \"share of search\", \"share of earned media\"],\n  },\n  {\n    title: \"Emotions\",\n    description:\n      \"Emotion is the most powerful force in creating long term brand and sales and therefore key to measure. Check here to see if you are successful in creating an emotional response, what topics are driving the positive and negative sentiment and what areas of your business your brand is appreciated for.\",\n    widgetIds: [\"attitude\", \"sentiment drivers\", \"business drivers\"],\n  },\n  {\n    title: \"Competition\",\n    description:\n      \"Lastly you need to look into how you are differentiating yourself from your competition and what areas of your marketing communications which you have the biggest potential in gaining market share.\",\n    widgetIds: [\"general attributes\", \"position vs competition\", \"key areas\"],\n  },\n];\n\nexport default widgetTemplates;\n","import { FC, useContext, useState, useMemo, useEffect } from \"react\";\nimport styles from \"./WidgetLibraryPage.module.scss\";\nimport context from \"../../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchAllDashboards } from \"../dashboardsSlice\";\nimport { WidgetLibraryTile } from \"./WidgetLibraryTile\";\nimport { WidgetLibraryWidgetsPreview } from \"./WidgetLibraryWidgetsPreview\";\nimport { WidgetLibraryCreateDashboard } from \"./WidgetLibraryCreateDashboard\";\nimport { Preloader, Input, Select, Label } from \"../../../components\";\nimport { Magnifier, Close } from \"../../../assets/icons\";\nimport { withError } from \"../../../hocs\";\nimport { selectCompanySubscriptionPlan } from \"../../../features/subscriptionPlans/subscriptionPlansSlice\";\nimport widgets from \"../../../features/widgets/widgets\";\nimport widgetTemplates from \"../../../features/widgets/widgetTemplates\";\nimport { useImmer } from \"use-immer\";\nimport { useTemporaryErrors } from \"../../../hooks\";\n\nconst SelectWithError = withError(Select);\n\ntype Tile = {\n  title: string;\n  description: string;\n  widgetIds: string[];\n  isAvailable: boolean;\n  isHidden?: boolean;\n};\n\nconst WidgetLibraryPage: FC = () => {\n  const { setModalElement } = useContext(context);\n  const dispatch = useDispatch();\n  const { errors, setErrors } = useTemporaryErrors();\n\n  // searches\n  const searchOptions = useSelector(({ searches }: Store.State) =>\n    searches.map(({ id, name }) => ({ value: id, label: name }))\n  );\n\n  const [searchId, setSearchId] = useState(\"\");\n\n  // dashboards\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  const dashboardsStatus = useSelector(\n    ({ dashboards }: RootState) => dashboards.status\n  );\n\n  useEffect(() => {\n    if (dashboardsStatus === \"idle\") {\n      dispatch(fetchAllDashboards());\n    }\n  }, [dashboardsStatus, dispatch]);\n\n  // tiles\n  const [filter, setFilter] = useState(\"\");\n\n  const companySubscriptionPlan = useSelector(selectCompanySubscriptionPlan);\n\n  const tiles: Tile[] = useMemo(() => {\n    const availableWidgetIds = companySubscriptionPlan?.availableWidgets ?? [];\n\n    function getAvailabilityStatus(ids: Tile[\"widgetIds\"]) {\n      return ids.every((id) => availableWidgetIds.includes(id));\n    }\n\n    return [\n      ...widgetTemplates\n        .map((template) => ({\n          ...template,\n          isAvailable: getAvailabilityStatus(template.widgetIds),\n        }))\n        .sort((a, b) => +b.isAvailable - +a.isAvailable),\n      ...widgets.ids\n        .map((id) => ({\n          title: widgets.entities[id]?.name ?? \"\",\n          description: widgets.entities[id]?.description ?? \"\",\n          widgetIds: [id],\n          isAvailable: getAvailabilityStatus([id]),\n          isHidden: !widgets.entities[id]?.name\n            .toLowerCase()\n            .includes(filter.toLowerCase()),\n        }))\n        .sort((a, b) => +b.isAvailable - +a.isAvailable)\n        .sort((a, b) => +a.isHidden - +b.isHidden),\n    ];\n  }, [companySubscriptionPlan, filter]);\n\n  const [hoveredTileIndex, setHoveredTileIndex] = useState(-1);\n\n  const hoveredTile = tiles[hoveredTileIndex];\n\n  const [selectedWidgetIds, updateSelectedWidgetIds] = useImmer<{\n    [widgetId: string]: true;\n  }>({});\n\n  // const selectedWidgetIdsList = useMemo(() => {\n  //   return widgets.ids.filter((id) => selectedWidgetIds[id]);\n  // }, [selectedWidgetIds]);\n\n  const [\n    isCreateDashboardSectionShown,\n    setIsCreateDashboardSectionShown,\n  ] = useState(false);\n\n  useEffect(() => {\n    if (\n      isCreateDashboardSectionShown &&\n      !Object.keys(selectedWidgetIds).length\n    ) {\n      setIsCreateDashboardSectionShown(false);\n    }\n  }, [isCreateDashboardSectionShown, selectedWidgetIds]);\n\n  function showPreviewModal() {\n    if (hoveredTile) {\n      setModalElement(\n        <div className={styles.modal}>\n          <WidgetLibraryWidgetsPreview\n            title={hoveredTile.title}\n            description={hoveredTile.description}\n            widgetIds={hoveredTile.widgetIds}\n            isAvailable={hoveredTile.isAvailable}\n          />\n        </div>\n      );\n    }\n  }\n\n  function getIsEachWidgetOfTileChecked(widgetIds: string[]) {\n    return widgetIds.every((id) => selectedWidgetIds[id]);\n  }\n\n  function checkEachWidgetOfTile(widgetIds: string[]) {\n    widgetIds.forEach((id) =>\n      updateSelectedWidgetIds((draft) => void (draft[id] = true))\n    );\n  }\n\n  function uncheckEachWidgetOfTile(widgetIds: string[]) {\n    widgetIds.forEach((id) =>\n      updateSelectedWidgetIds((draft) => void delete draft[id])\n    );\n  }\n\n  function onSaveClicked() {\n    if (!searchId) {\n      setErrors({\n        searchId: \"Required\",\n      });\n      return;\n    }\n\n    if (window.innerWidth >= 992) {\n      setIsCreateDashboardSectionShown(true);\n    } else {\n      setIsCreateDashboardSectionShown(false);\n      setModalElement(\n        <div className={styles.modal}>\n          <WidgetLibraryCreateDashboard\n            isPrivate={isPrivate}\n            searchId={searchId}\n            selectedWidgetIds={selectedWidgetIds}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (dashboardsStatus === \"loading\") {\n    return <Preloader modifier=\"inner\" />;\n  }\n\n  return (\n    <div className={styles.widgetLibraryPage}>\n      <div className={styles.title}>Widget library</div>\n      <div className={styles.selectsWrapper}>\n        <div className={styles.selectWrapper}>\n          <Label leftText=\"Select your dashboard type\" />\n          <SelectWithError\n            options={[\n              { value: \"\", label: \"Public\" },\n              { value: \" \", label: \"Private\" },\n            ]}\n            value={isPrivate ? \" \" : \"\"}\n            changeHandler={(value) => setIsPrivate(Boolean(value))}\n          />\n        </div>\n        <div className={styles.selectWrapper}>\n          <Label leftText=\"Select your search\" />\n          <SelectWithError\n            options={searchOptions}\n            value={searchId}\n            changeHandler={(value) => setSearchId(value)}\n            error={errors.searchId}\n          />\n        </div>\n      </div>\n      <div className={styles.subtitles}>\n        <div>Here you select what widgets to use to visualise your data.</div>\n        {!!Object.keys(selectedWidgetIds).length && (\n          <div>\n            When you‚Äôre done with your selection, save your choices.\n            <button className={styles.button} onClick={() => onSaveClicked()}>\n              Save\n            </button>\n          </div>\n        )}\n      </div>\n      <div className={styles.—Åontent}>\n        <div className={styles.main}>\n          <div>\n            <div className={styles.note}>\n              Ready made templates packages (choosing all three are recommended\n              to reach a full coverage)\n            </div>\n            <div className={styles.templatesWrapper}>\n              {tiles.slice(0, 3).map(({ title, widgetIds, isAvailable }, i) => {\n                const isEveryWidgetChecked = getIsEachWidgetOfTileChecked(\n                  widgetIds\n                );\n                return (\n                  <WidgetLibraryTile\n                    title={title}\n                    widgetIds={widgetIds}\n                    onQuestionClicked={() => showPreviewModal()}\n                    isChecked={isEveryWidgetChecked}\n                    onCheckboxClicked={() =>\n                      isEveryWidgetChecked\n                        ? uncheckEachWidgetOfTile(widgetIds)\n                        : checkEachWidgetOfTile(widgetIds)\n                    }\n                    isAvailable={isAvailable}\n                    onMouseEnter={() => setHoveredTileIndex(i)}\n                    onMouseLeave={() => setHoveredTileIndex(-1)}\n                    key={i}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div>\n            <div className={styles.note}>Or choose widget of your liking</div>\n            <div className={styles.filter}>\n              <Input\n                className={styles.filterInput}\n                value={filter}\n                changeHandler={(value) => setFilter(value)}\n                placeholder=\"Search for widget...\"\n              />\n              <Magnifier\n                className={styles.filterIcon}\n                size={20}\n                opacity={filter ? 1 : 0.25}\n              />\n            </div>\n            <div className={styles.widgetsWrapper}>\n              {tiles\n                .slice(3)\n                .map(({ title, widgetIds, isAvailable, isHidden }, i) => {\n                  const isEveryWidgetChecked = getIsEachWidgetOfTileChecked(\n                    widgetIds\n                  );\n\n                  return (\n                    <WidgetLibraryTile\n                      style={{ ...(isHidden && { visibility: \"hidden\" }) }}\n                      title={title}\n                      widgetIds={widgetIds}\n                      onQuestionClicked={() => showPreviewModal()}\n                      isChecked={isEveryWidgetChecked}\n                      onCheckboxClicked={() =>\n                        isEveryWidgetChecked\n                          ? uncheckEachWidgetOfTile(widgetIds)\n                          : checkEachWidgetOfTile(widgetIds)\n                      }\n                      isAvailable={isAvailable}\n                      onMouseEnter={() => setHoveredTileIndex(i + 3)}\n                      onMouseLeave={() => setHoveredTileIndex(-1)}\n                      key={i}\n                    />\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n        <div className={styles.aside}>\n          {!!hoveredTile && !isCreateDashboardSectionShown && (\n            <div className={styles.asideSection}>\n              <WidgetLibraryWidgetsPreview\n                title={hoveredTile.title}\n                description={hoveredTile.description}\n                widgetIds={hoveredTile.widgetIds}\n                isAvailable={hoveredTile.isAvailable}\n              />\n            </div>\n          )}\n          {isCreateDashboardSectionShown && (\n            <div className={styles.asideSection}>\n              <button\n                className={styles.closeButton}\n                onClick={() => setIsCreateDashboardSectionShown(false)}\n              >\n                <Close size={28} />\n              </button>\n              <WidgetLibraryCreateDashboard\n                isPrivate={isPrivate}\n                searchId={searchId}\n                selectedWidgetIds={selectedWidgetIds}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WidgetLibraryPage;\n"],"sourceRoot":""}