{"version":3,"sources":["containers/Home/Education/Education.module.scss","containers/Home/Education/Education.tsx"],"names":["module","exports","steps","number","imageNames","title","description","connect","current","user","searches","currentSearchId","searchId","requestSurvey","actions","useContext","context","setModalElement","setIsGlobalPreloaderShown","a","find","id","owner","text","main","surveyRequestSearchIds","includes","secondary","clickRedButtonHandler","clickGreenButtonHandler","handleClickConfirmRequestSurvey","console","dir","notify","show","className","classes","education","viewTitle","question","content","map","step","i","key","stepNumber","length","stepImages","name","stepImage","stepTitle","Step","birdImageWrapper","birdImage","button","onClick","footerLink","to"],"mappings":"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","file":"static/js/10.97850465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"education\":\"Education_education__1UnHI\",\"content\":\"Education_content__3zNsv\",\"stepTitle\":\"Education_stepTitle__3IZ46\",\"title\":\"Education_title__21el9\",\"step\":\"Education_step__3Q2Z0\",\"stepNumber\":\"Education_stepNumber__2XZ95\",\"stepImages\":\"Education_stepImages__1aaxo\",\"stepImage\":\"Education_stepImage__2gBbC\",\"birdImage\":\"Education_birdImage__3jLjX\",\"birdImageWrapper\":\"Education_birdImageWrapper__1tDf0\",\"text\":\"Education_text__1pHN9\",\"button\":\"Education_button__KYWNS\",\"footerLink\":\"Education_footerLink__1GPtg\"};","import React, { useContext } from \"react\";\nimport classes from \"./Education.module.scss\";\nimport context from \"../../../context\";\nimport { connect } from \"react-redux\";\nimport { ViewTitle, Image, RequestServeyModal } from \"../../../components\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../../store/actions\";\nimport { notify } from \"react-notify-toast\";\n\nconst steps: {\n  number: number;\n  imageNames: ImageName[];\n  title: string;\n  description: string;\n}[] = [\n  {\n    number: 1,\n    imageNames: [\"marketometerWidget1\", \"marketometerWidget2\", \"marketometerWidget3\"],\n    title: \"Marketometer\",\n    description:\n      \"Your marketometer is your everyday indicator, this shows if you are on track with building your brand over the last 30 days. If this suddenly changes, it is recommended that you further analyze the reason for it.\",\n  },\n  {\n    number: 2,\n    imageNames: [\"competitivenessWidget\", \"shareOfSearchWidget1\", \"shareOfEarnedMediaWidget1\"],\n    title: \"Effectiveness\",\n    description:\n      \"To fully understand how effective your marketing communications are, you should look at if you are creating interest, talkability and how competitive your brand is.\",\n  },\n  {\n    number: 3,\n    imageNames: [\"attitudeWidget1\", \"sentimentDriversWidget\", \"businessDriversWidget\"],\n    title: \"Emotions\",\n    description:\n      \"The key to effective long term brand building is creating marketing communications that move people. Check here to see if you are successful in creating sentiment, what topics are driving the positive and negative sentiment and what areas of your business your brand is appreciated for.\",\n  },\n  {\n    number: 4,\n    imageNames: [\"generalAttributesWidget\", \"positionVsCompetitionWidget\", \"keyAreasWidget\"],\n    title: \"Competition\",\n    description:\n      \"Look into if you are differentiating yourself from your competition and get recommendations of what areas of your marketing communications which you have the biggest potential in.\",\n  },\n];\n\ninterface Props {\n  currentSearchId: Store.Current[\"searchId\"];\n  user: Store.User;\n  searches: Store.Searches;\n  requestSurvey: typeof actions.requestSurvey;\n}\n\nconst Education = ({ currentSearchId, user, searches, requestSurvey }: Props) => {\n  const { setModalElement, setIsGlobalPreloaderShown } = useContext(context);\n\n  async function handleClickRequestSurvey() {\n    const isUserSearch = searches.find(({ id }) => id === currentSearchId)?.owner.id === user.id;\n    if (!isUserSearch) {\n      setModalElement(\n        <RequestServeyModal\n          text={{\n            main: \"You are able to request surveys based only on your own searches.\",\n          }}\n        />\n      );\n      return;\n    }\n\n    const isSurveyRequested = user.surveyRequestSearchIds.includes(currentSearchId);\n    if (isSurveyRequested) {\n      setModalElement(\n        <RequestServeyModal\n          text={{\n            main: \"Your request is currently being handled and we will be with you shortly.\",\n          }}\n        />\n      );\n      return;\n    }\n\n    setModalElement(\n      <RequestServeyModal\n        text={{\n          main: \"Do you want a deep dive in a specific question?\",\n          secondary: \"Our team will be in contact with you to conduct a custom report to you.<br/><br/>Price: on request.\",\n        }}\n        clickRedButtonHandler={() => setModalElement(null)}\n        clickGreenButtonHandler={handleClickConfirmRequestSurvey}\n      />\n    );\n  }\n\n  async function handleClickConfirmRequestSurvey() {\n    setIsGlobalPreloaderShown(true);\n    try {\n      await requestSurvey(currentSearchId);\n      setModalElement(\n        <RequestServeyModal\n          text={{\n            main: \"Great!<br/>We’ll talk to you soon.\",\n          }}\n        />\n      );\n    } catch (error) {\n      console.dir(error);\n      notify.show(\"Oops, something went wrong\", \"error\");\n    }\n    setIsGlobalPreloaderShown(false);\n  }\n\n  const Step = ({ number, imageNames, title, description }: typeof steps[number], key: number) => (\n    <div className={classes.step} key={key}>\n      <div className={classes.stepNumber}>Step {number}.</div>\n      {!!imageNames.length && (\n        <div className={classes.stepImages}>\n          {imageNames.map((name, i) => (\n            <Image className={classes.stepImage} name={name} key={i} />\n          ))}\n        </div>\n      )}\n      <div className={classes.stepTitle}>{title}</div>\n      <div className={classes.text}>{description}</div>\n    </div>\n  );\n\n  return (\n    <div className={classes.education}>\n      <ViewTitle\n        className={classes.viewTitle}\n        title=\"How to measure effectiveness:\"\n        question='\"The sum of all marketing activities that come together to build or break a brand\"'\n      />\n      <div className={classes.content}>\n        {steps.map((step, i) => Step(step, i))}\n        <div>\n          <div className={classes.birdImageWrapper}>\n            <Image className={classes.birdImage} name=\"bird\" />\n          </div>\n          <div className={classes.title}>Want to find out more?</div>\n          <div className={classes.text}>\n            Want to find out more what is affecting your brands effectiveness and receive insights into becoming a stronger brand?\n          </div>\n          <button className={classes.button} onClick={handleClickRequestSurvey}>\n            Request a survey now\n          </button>\n        </div>\n      </div>\n      <Link className={classes.footerLink} to=\"/home/blocks\">\n        Ok! Let’s do this!\n      </Link>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ current, user, searches }: Store.State) => ({\n  currentSearchId: current.searchId,\n  user,\n  searches,\n});\n\nexport default connect(mapStateToProps, { requestSurvey: actions.requestSurvey })(Education);\n"],"sourceRoot":""}