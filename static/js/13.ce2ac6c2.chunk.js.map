{"version":3,"sources":["features/faqs/FaqPage.module.scss","features/faqs/FaqPage.tsx"],"names":["module","exports","FaqPage","wrapperRef","faqsStatus","useSelector","faqs","status","selectAllFaqs","dispatch","useDispatch","isFirstLoading","useRef","useEffect","current","fetchAllFaqs","blockRefs","modifier","className","styles","faqPage","title","length","map","id","paragraphs","block","ref","blockRef","blockTitle","i","subtitle","text","paragraph","dangerouslySetInnerHTML","__html","aside","links","link","onClick","faqId","scrollTo","top","offsetTop","behavior","onLinkClicked"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,uBAAuB,WAAa,4BAA4B,UAAY,2BAA2B,SAAW,0BAA0B,KAAO,wB,qGCoF3TC,UA3EY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACtBC,EAAaC,aAAY,qBAAGC,KAA2BC,UACvDD,EAAOD,YAAYG,KAEnBC,EAAWC,cAEXC,EAAiBC,kBAAO,GAE9BC,qBAAU,YAENF,EAAeG,SACC,SAAfV,GAAwC,WAAfA,IAE1BO,EAAeG,SAAU,EACzBL,EAASM,kBAEV,CAACX,EAAYK,IAEhB,IAAMO,EAAYJ,iBAA4C,IAS9D,MAAmB,SAAfR,GAAwC,YAAfA,EACpB,cAAC,IAAD,CAAWa,SAAS,UAI3B,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,qBAAKF,UAAWC,IAAOE,MAAvB,iBACCf,EAAKgB,OACJ,qCACGhB,EAAKiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,MAAOI,EAAd,EAAcA,WAAd,OACR,sBACEP,UAAWC,IAAOO,MAClBC,IAAK,SAACC,GAAD,OAAcA,IAAaZ,EAAUF,QAAQU,GAAMI,IAF1D,UAKE,qBAAKV,UAAWC,IAAOU,WAAvB,SAAoCR,IACnCI,EAAWF,KAAI,WAAqBO,GAArB,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACd,sBAAKd,UAAWC,IAAOc,UAAvB,UACE,qBAAKf,UAAWC,IAAOY,SAAvB,SAAkCA,IAClC,qBACEb,UAAWC,IAAOa,KAClBE,wBAAyB,CAAEC,OAAQH,OAJAF,QAJpCN,MAcT,qBAAKN,UAAWC,IAAOiB,MAAvB,SACE,qBAAKlB,UAAWC,IAAOkB,MAAvB,SACG/B,EAAKiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,MAAP,OACR,qBACEH,UAAWC,IAAOmB,KAClBC,QAAS,kBAvCzB,SAAuBC,GAAgB,IAAD,EACpC,UAAArC,EAAWW,eAAX,SAAoB2B,SAAS,CAC3BC,IAAK1B,EAAUF,QAAQ0B,GAAQG,UAAY,GAC3CC,SAAU,WAoCiBC,CAAcrB,IAF/B,SAKGH,GAFIG,aASf","file":"static/js/13.ce2ac6c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"faqPage\":\"FaqPage_faqPage__1iuLR\",\"title\":\"FaqPage_title__1ec3U\",\"aside\":\"FaqPage_aside__3WVlA\",\"links\":\"FaqPage_links__35GSX\",\"link\":\"FaqPage_link__3PkcJ\",\"block\":\"FaqPage_block__3io9y\",\"blockTitle\":\"FaqPage_blockTitle__lOZVk\",\"paragraph\":\"FaqPage_paragraph__2vd-V\",\"subtitle\":\"FaqPage_subtitle__2vTOV\",\"text\":\"FaqPage_text__1u5dg\"};","import { FC, RefObject, useRef, useEffect } from \"react\";\nimport styles from \"./FaqPage.module.scss\";\nimport { Preloader } from \"../../components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAllFaqs, fetchAllFaqs } from \"./faqsSlice\";\n\ninterface Props {\n  wrapperRef: RefObject<HTMLDivElement>;\n}\n\nconst FaqPage: FC<Props> = ({ wrapperRef }) => {\n  const faqsStatus = useSelector(({ faqs }: RootState) => faqs.status);\n  const faqs = useSelector(selectAllFaqs);\n\n  const dispatch = useDispatch();\n\n  const isFirstLoading = useRef(true);\n\n  useEffect(() => {\n    if (\n      isFirstLoading.current &&\n      (faqsStatus === \"idle\" || faqsStatus === \"failed\")\n    ) {\n      isFirstLoading.current = false;\n      dispatch(fetchAllFaqs());\n    }\n  }, [faqsStatus, dispatch]);\n\n  const blockRefs = useRef<{ [faqId: string]: HTMLDivElement }>({});\n\n  function onLinkClicked(faqId: string) {\n    wrapperRef.current?.scrollTo({\n      top: blockRefs.current[faqId]!.offsetTop - 40,\n      behavior: \"smooth\",\n    });\n  }\n\n  if (faqsStatus === \"idle\" || faqsStatus === \"loading\") {\n    return <Preloader modifier=\"inner\" />;\n  }\n\n  return (\n    <div className={styles.faqPage}>\n      <div className={styles.title}>FAQ</div>\n      {faqs.length ? (\n        <>\n          {faqs.map(({ id, title, paragraphs }) => (\n            <div\n              className={styles.block}\n              ref={(blockRef) => blockRef && (blockRefs.current[id] = blockRef)}\n              key={id}\n            >\n              <div className={styles.blockTitle}>{title}</div>\n              {paragraphs.map(({ subtitle, text }, i) => (\n                <div className={styles.paragraph} key={i}>\n                  <div className={styles.subtitle}>{subtitle}</div>\n                  <div\n                    className={styles.text}\n                    dangerouslySetInnerHTML={{ __html: text }}\n                  />\n                </div>\n              ))}\n            </div>\n          ))}\n          <div className={styles.aside}>\n            <div className={styles.links}>\n              {faqs.map(({ id, title }) => (\n                <div\n                  className={styles.link}\n                  onClick={() => onLinkClicked(id)}\n                  key={id}\n                >\n                  {title}\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <div>No questions found</div>\n      )}\n    </div>\n  );\n};\n\nexport default FaqPage;\n"],"sourceRoot":""}