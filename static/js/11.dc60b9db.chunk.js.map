{"version":3,"sources":["containers/Home/EnterpriseDashboards/EnterpriseDashboards.module.scss","containers/Home/EnterpriseDashboards/EnterpriseDashboard/EnterpriseDashboard.tsx","containers/Home/EnterpriseDashboards/EnterpriseDashboards.tsx"],"names":["module","exports","EnterpriseDashboard","dashboardId","location","pathname","split","pop","useReducer","reducer","initialState","state","dispatch","Provider","value","loaderBackground","loaderFontColor","loaderSpinnerColor","loaderSpinnerBackground","switchScreenmodeOnResize","connect","enterpriseDashboards","company","className","styles","title","length","links","map","i","id","name","link","activeClassName","linkActive","to","content","exact","path","render","routeProps"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,qBAAuB,mDAAmD,MAAQ,oCAAoC,MAAQ,oCAAoC,KAAO,mCAAmC,WAAa,yCAAyC,QAAU,wC,2HC8B/QC,EAnBa,SAAC,GAAyB,IAC9CC,EAD6C,EAAtBC,SACAC,SAASC,MAAM,KAAKC,MADE,EAGzBC,qBAAWC,IAASC,KAHK,mBAG5CC,EAH4C,KAGrCC,EAHqC,KAKnD,OACE,cAAC,IAAeC,SAAhB,CAAyBC,MAAO,CAAEH,QAAOC,YAAzC,SACE,cAAC,IAAD,CACET,YAAaA,EACbY,iBAAiB,cACjBC,gBAAgB,UAChBC,mBAAmB,UACnBC,wBAAwB,cACxBC,0BAAwB,OC2BjBC,uBAJS,SAAC,GAAD,MAA+B,CACrDC,qBADsB,EAAGC,QACKD,wBAGjBD,EA1Cc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,qBAC9B,OACE,sBAAKE,UAAWC,IAAOH,qBAAvB,UACE,qBAAKE,UAAWC,IAAOC,MAAvB,wBACCJ,EAAqBK,OAAS,GAC7B,qBAAKH,UAAWC,IAAOG,MAAvB,SACGN,EAAqBO,KAAI,WAAeC,GAAf,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACxB,cAAC,IAAD,CACER,UAAWC,IAAOQ,KAClBC,gBAAiBT,IAAOU,WACxBC,GAAIL,EACJL,MAAOM,EAJT,SAOGA,GAFIF,QAOb,qBAAKN,UAAWC,IAAOY,QAAvB,SACE,eAAC,IAAD,WACGf,EAAqBO,KAAI,WAASC,GAAT,IAAGC,EAAH,EAAGA,GAAH,OACxB,cAAC,IAAD,CACEO,OAAK,EACLC,KAAM,0BAA4BR,EAClCS,OAAQ,SAACC,GAAD,OAAgB,cAAC,EAAD,eAAyBA,MAC5CX,MAGT,cAAC,IAAD,CACEM,GAAI,0BAA4Bd,EAAqB,GAAIS","file":"static/js/11.dc60b9db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enterpriseDashboards\":\"EnterpriseDashboards_enterpriseDashboards__2ldxH\",\"title\":\"EnterpriseDashboards_title__2zlKN\",\"links\":\"EnterpriseDashboards_links__tDhYb\",\"link\":\"EnterpriseDashboards_link__2lZEh\",\"linkActive\":\"EnterpriseDashboards_linkActive__385av\",\"content\":\"EnterpriseDashboards_content__2r10P\"};","import React, { useReducer } from \"react\";\r\nimport {\r\n  CumulioContext,\r\n  initialState,\r\n  reducer,\r\n  CumulioComponent,\r\n} from \"react-cumulio\";\r\n\r\ninterface Props {\r\n  location: any;\r\n}\r\n\r\nconst EnterpriseDashboard = ({ location }: Props) => {\r\n  const dashboardId = location.pathname.split(\"/\").pop();\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <CumulioContext.Provider value={{ state, dispatch }}>\r\n      <CumulioComponent\r\n        dashboardId={dashboardId}\r\n        loaderBackground=\"transparent\"\r\n        loaderFontColor=\"#ef336a\"\r\n        loaderSpinnerColor=\"#ef336a\"\r\n        loaderSpinnerBackground=\"transparent\"\r\n        switchScreenmodeOnResize\r\n      />\r\n    </CumulioContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EnterpriseDashboard;\r\n","import React from \"react\";\r\nimport styles from \"./EnterpriseDashboards.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport EnterpriseDashboard from \"./EnterpriseDashboard/EnterpriseDashboard\";\r\n\r\ninterface Props {\r\n  enterpriseDashboards: Store.Company[\"enterpriseDashboards\"];\r\n}\r\n\r\nconst EnterpriseDashboards = ({ enterpriseDashboards }: Props) => {\r\n  return (\r\n    <div className={styles.enterpriseDashboards}>\r\n      <div className={styles.title}>Enterprise</div>\r\n      {enterpriseDashboards.length > 1 && (\r\n        <div className={styles.links}>\r\n          {enterpriseDashboards.map(({ id, name }, i) => (\r\n            <NavLink\r\n              className={styles.link}\r\n              activeClassName={styles.linkActive}\r\n              to={id}\r\n              title={name}\r\n              key={i}\r\n            >\r\n              {name}\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className={styles.content}>\r\n        <Switch>\r\n          {enterpriseDashboards.map(({ id }, i) => (\r\n            <Route\r\n              exact\r\n              path={\"/enterprise-dashboards/\" + id}\r\n              render={(routeProps) => <EnterpriseDashboard {...routeProps} />}\r\n              key={i}\r\n            />\r\n          ))}\r\n          <Redirect\r\n            to={\"/enterprise-dashboards/\" + enterpriseDashboards[0]!.id}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ company }: Store.State) => ({\r\n  enterpriseDashboards: company.enterpriseDashboards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(EnterpriseDashboards);\r\n"],"sourceRoot":""}